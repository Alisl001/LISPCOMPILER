# Generated from LispLexer.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,19,135,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,1,0,1,
        0,5,0,42,8,0,10,0,12,0,45,9,0,1,1,4,1,48,8,1,11,1,12,1,49,1,1,1,
        1,4,1,54,8,1,11,1,12,1,55,3,1,58,8,1,1,2,1,2,1,3,1,3,1,4,1,4,1,5,
        1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,1,9,5,9,76,8,9,10,9,12,9,79,9,9,
        1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,11,1,11,1,11,1,11,1,11,1,11,1,
        12,1,12,1,12,1,12,1,12,1,12,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,
        14,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,1,17,1,17,5,
        17,120,8,17,10,17,12,17,123,9,17,1,17,1,17,1,17,1,17,1,18,4,18,130,
        8,18,11,18,12,18,131,1,18,1,18,1,121,0,19,1,1,3,2,5,3,7,4,9,5,11,
        6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,17,
        35,18,37,19,1,0,5,3,0,65,90,95,95,97,122,5,0,45,45,48,57,65,90,95,
        95,97,122,1,0,48,57,3,0,10,10,13,13,34,34,3,0,9,10,13,13,32,32,141,
        0,1,1,0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,
        1,0,0,0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,
        1,0,0,0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,
        1,0,0,0,0,33,1,0,0,0,0,35,1,0,0,0,0,37,1,0,0,0,1,39,1,0,0,0,3,47,
        1,0,0,0,5,59,1,0,0,0,7,61,1,0,0,0,9,63,1,0,0,0,11,65,1,0,0,0,13,
        67,1,0,0,0,15,69,1,0,0,0,17,71,1,0,0,0,19,73,1,0,0,0,21,82,1,0,0,
        0,23,87,1,0,0,0,25,93,1,0,0,0,27,99,1,0,0,0,29,102,1,0,0,0,31,107,
        1,0,0,0,33,111,1,0,0,0,35,117,1,0,0,0,37,129,1,0,0,0,39,43,7,0,0,
        0,40,42,7,1,0,0,41,40,1,0,0,0,42,45,1,0,0,0,43,41,1,0,0,0,43,44,
        1,0,0,0,44,2,1,0,0,0,45,43,1,0,0,0,46,48,7,2,0,0,47,46,1,0,0,0,48,
        49,1,0,0,0,49,47,1,0,0,0,49,50,1,0,0,0,50,57,1,0,0,0,51,53,5,46,
        0,0,52,54,7,2,0,0,53,52,1,0,0,0,54,55,1,0,0,0,55,53,1,0,0,0,55,56,
        1,0,0,0,56,58,1,0,0,0,57,51,1,0,0,0,57,58,1,0,0,0,58,4,1,0,0,0,59,
        60,5,43,0,0,60,6,1,0,0,0,61,62,5,45,0,0,62,8,1,0,0,0,63,64,5,42,
        0,0,64,10,1,0,0,0,65,66,5,47,0,0,66,12,1,0,0,0,67,68,5,37,0,0,68,
        14,1,0,0,0,69,70,5,40,0,0,70,16,1,0,0,0,71,72,5,41,0,0,72,18,1,0,
        0,0,73,77,5,34,0,0,74,76,8,3,0,0,75,74,1,0,0,0,76,79,1,0,0,0,77,
        75,1,0,0,0,77,78,1,0,0,0,78,80,1,0,0,0,79,77,1,0,0,0,80,81,5,34,
        0,0,81,20,1,0,0,0,82,83,5,116,0,0,83,84,5,114,0,0,84,85,5,117,0,
        0,85,86,5,101,0,0,86,22,1,0,0,0,87,88,5,102,0,0,88,89,5,97,0,0,89,
        90,5,108,0,0,90,91,5,115,0,0,91,92,5,101,0,0,92,24,1,0,0,0,93,94,
        5,100,0,0,94,95,5,101,0,0,95,96,5,102,0,0,96,97,5,117,0,0,97,98,
        5,110,0,0,98,26,1,0,0,0,99,100,5,105,0,0,100,101,5,102,0,0,101,28,
        1,0,0,0,102,103,5,99,0,0,103,104,5,111,0,0,104,105,5,110,0,0,105,
        106,5,100,0,0,106,30,1,0,0,0,107,108,5,108,0,0,108,109,5,101,0,0,
        109,110,5,116,0,0,110,32,1,0,0,0,111,112,5,113,0,0,112,113,5,117,
        0,0,113,114,5,111,0,0,114,115,5,116,0,0,115,116,5,101,0,0,116,34,
        1,0,0,0,117,121,5,59,0,0,118,120,9,0,0,0,119,118,1,0,0,0,120,123,
        1,0,0,0,121,122,1,0,0,0,121,119,1,0,0,0,122,124,1,0,0,0,123,121,
        1,0,0,0,124,125,5,10,0,0,125,126,1,0,0,0,126,127,6,17,0,0,127,36,
        1,0,0,0,128,130,7,4,0,0,129,128,1,0,0,0,130,131,1,0,0,0,131,129,
        1,0,0,0,131,132,1,0,0,0,132,133,1,0,0,0,133,134,6,18,0,0,134,38,
        1,0,0,0,8,0,43,49,55,57,77,121,131,1,6,0,0
    ]

class LispLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    IDENTIFIER = 1
    NUMBER = 2
    PLUS = 3
    MINUS = 4
    MULT = 5
    DIV = 6
    MOD = 7
    LPAREN = 8
    RPAREN = 9
    STRING = 10
    TRUE = 11
    FALSE = 12
    DEFUN = 13
    IF = 14
    COND = 15
    LET = 16
    QUOTE = 17
    COMMENT = 18
    WS = 19

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'+'", "'-'", "'*'", "'/'", "'%'", "'('", "')'", "'true'", "'false'", 
            "'defun'", "'if'", "'cond'", "'let'", "'quote'" ]

    symbolicNames = [ "<INVALID>",
            "IDENTIFIER", "NUMBER", "PLUS", "MINUS", "MULT", "DIV", "MOD", 
            "LPAREN", "RPAREN", "STRING", "TRUE", "FALSE", "DEFUN", "IF", 
            "COND", "LET", "QUOTE", "COMMENT", "WS" ]

    ruleNames = [ "IDENTIFIER", "NUMBER", "PLUS", "MINUS", "MULT", "DIV", 
                  "MOD", "LPAREN", "RPAREN", "STRING", "TRUE", "FALSE", 
                  "DEFUN", "IF", "COND", "LET", "QUOTE", "COMMENT", "WS" ]

    grammarFileName = "LispLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


