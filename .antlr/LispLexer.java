// Generated from c:/antlr/LispCompiler/LispLexer.g4 by ANTLR 4.13.1
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue", "this-escape"})
public class LispLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.13.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		STRING=1, NUMBER=2, DEFUN=3, IF=4, COND=5, LET=6, QUOTE=7, PRINT=8, DEFPARAMETER=9, 
		LAMBDA=10, FORMAT=11, AND=12, OR=13, NOT=14, ELSE=15, IDENTIFIER=16, PLUS=17, 
		MINUS=18, DIV=19, MOD=20, GREATER_EQUAL=21, LESS_EQUAL=22, GREATER=23, 
		LESS=24, EQUAL=25, LPAREN=26, RPAREN=27, TRUE=28, FALSE=29, COMMENT=30, 
		WS=31, ERROR=32, MULT=33;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"STRING", "ESC_SEQ", "NUMBER", "DEFUN", "IF", "COND", "LET", "QUOTE", 
			"PRINT", "DEFPARAMETER", "LAMBDA", "FORMAT", "AND", "OR", "NOT", "ELSE", 
			"IDENTIFIER", "PLUS", "MINUS", "MULT", "DIV", "MOD", "GREATER_EQUAL", 
			"LESS_EQUAL", "GREATER", "LESS", "EQUAL", "LPAREN", "RPAREN", "TRUE", 
			"FALSE", "COMMENT", "WS", "ERROR"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'defun'", "'if'", "'cond'", "'let'", "'quote'", "'print'", 
			"'defparameter'", "'lambda'", "'format'", "'and'", "'or'", "'not'", "'else'", 
			null, "'+'", "'-'", "'/'", "'%'", "'>='", "'<='", "'>'", "'<'", "'='", 
			"'('", "')'", "'true'", "'false'", null, null, null, "'*'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "STRING", "NUMBER", "DEFUN", "IF", "COND", "LET", "QUOTE", "PRINT", 
			"DEFPARAMETER", "LAMBDA", "FORMAT", "AND", "OR", "NOT", "ELSE", "IDENTIFIER", 
			"PLUS", "MINUS", "DIV", "MOD", "GREATER_EQUAL", "LESS_EQUAL", "GREATER", 
			"LESS", "EQUAL", "LPAREN", "RPAREN", "TRUE", "FALSE", "COMMENT", "WS", 
			"ERROR", "MULT"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public LispLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "LispLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u0000!\u00ea\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0001\u0000\u0001\u0000\u0001\u0000\u0005\u0000I\b\u0000\n\u0000\f\u0000"+
		"L\t\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0002\u0004\u0002T\b\u0002\u000b\u0002\f\u0002U\u0001\u0002\u0001"+
		"\u0002\u0004\u0002Z\b\u0002\u000b\u0002\f\u0002[\u0003\u0002^\b\u0002"+
		"\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003\u0001\u0003"+
		"\u0001\u0004\u0001\u0004\u0001\u0004\u0001\u0005\u0001\u0005\u0001\u0005"+
		"\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0006\u0001\u0006"+
		"\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007\u0001\u0007"+
		"\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\b\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001\t\u0001"+
		"\t\u0001\t\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001\n\u0001"+
		"\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001\u000b\u0001"+
		"\u000b\u0001\f\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001\u000e"+
		"\u0001\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u000f"+
		"\u0001\u000f\u0001\u000f\u0001\u0010\u0001\u0010\u0005\u0010\u00ab\b\u0010"+
		"\n\u0010\f\u0010\u00ae\t\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001"+
		"\u0012\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0013\u0001\u0014\u0001"+
		"\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001\u0016\u0001\u0016\u0001"+
		"\u0017\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001\u001d\u0001"+
		"\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001\u001e\u0001"+
		"\u001f\u0001\u001f\u0005\u001f\u00d9\b\u001f\n\u001f\f\u001f\u00dc\t\u001f"+
		"\u0001\u001f\u0001\u001f\u0001\u001f\u0001\u001f\u0001 \u0004 \u00e3\b"+
		" \u000b \f \u00e4\u0001 \u0001 \u0001!\u0001!\u0001\u00da\u0000\"\u0001"+
		"\u0001\u0003\u0000\u0005\u0002\u0007\u0003\t\u0004\u000b\u0005\r\u0006"+
		"\u000f\u0007\u0011\b\u0013\t\u0015\n\u0017\u000b\u0019\f\u001b\r\u001d"+
		"\u000e\u001f\u000f!\u0010#\u0011%\u0012\'!)\u0013+\u0014-\u0015/\u0016"+
		"1\u00173\u00185\u00197\u001a9\u001b;\u001c=\u001d?\u001eA\u001fC \u0001"+
		"\u0000\u0006\u0002\u0000\"\"\\\\\u0007\u0000\"\"\'\'\\\\bbnnrrtt\u0001"+
		"\u000009\u0003\u0000AZ__az\u0006\u0000**--09AZ__az\u0003\u0000\t\n\r\r"+
		"  \u00f0\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000"+
		"\u0000\u0000\u0007\u0001\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000"+
		"\u0000\u000b\u0001\u0000\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000"+
		"\u000f\u0001\u0000\u0000\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000"+
		"\u0013\u0001\u0000\u0000\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000"+
		"\u0017\u0001\u0000\u0000\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000"+
		"\u001b\u0001\u0000\u0000\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000"+
		"\u001f\u0001\u0000\u0000\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001"+
		"\u0000\u0000\u0000\u0000%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000"+
		"\u0000\u0000\u0000)\u0001\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000"+
		"\u0000-\u0001\u0000\u0000\u0000\u0000/\u0001\u0000\u0000\u0000\u00001"+
		"\u0001\u0000\u0000\u0000\u00003\u0001\u0000\u0000\u0000\u00005\u0001\u0000"+
		"\u0000\u0000\u00007\u0001\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000"+
		"\u0000;\u0001\u0000\u0000\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?"+
		"\u0001\u0000\u0000\u0000\u0000A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000"+
		"\u0000\u0000\u0001E\u0001\u0000\u0000\u0000\u0003O\u0001\u0000\u0000\u0000"+
		"\u0005S\u0001\u0000\u0000\u0000\u0007_\u0001\u0000\u0000\u0000\te\u0001"+
		"\u0000\u0000\u0000\u000bh\u0001\u0000\u0000\u0000\rm\u0001\u0000\u0000"+
		"\u0000\u000fq\u0001\u0000\u0000\u0000\u0011w\u0001\u0000\u0000\u0000\u0013"+
		"}\u0001\u0000\u0000\u0000\u0015\u008a\u0001\u0000\u0000\u0000\u0017\u0091"+
		"\u0001\u0000\u0000\u0000\u0019\u0098\u0001\u0000\u0000\u0000\u001b\u009c"+
		"\u0001\u0000\u0000\u0000\u001d\u009f\u0001\u0000\u0000\u0000\u001f\u00a3"+
		"\u0001\u0000\u0000\u0000!\u00a8\u0001\u0000\u0000\u0000#\u00af\u0001\u0000"+
		"\u0000\u0000%\u00b1\u0001\u0000\u0000\u0000\'\u00b3\u0001\u0000\u0000"+
		"\u0000)\u00b7\u0001\u0000\u0000\u0000+\u00b9\u0001\u0000\u0000\u0000-"+
		"\u00bb\u0001\u0000\u0000\u0000/\u00be\u0001\u0000\u0000\u00001\u00c1\u0001"+
		"\u0000\u0000\u00003\u00c3\u0001\u0000\u0000\u00005\u00c5\u0001\u0000\u0000"+
		"\u00007\u00c7\u0001\u0000\u0000\u00009\u00c9\u0001\u0000\u0000\u0000;"+
		"\u00cb\u0001\u0000\u0000\u0000=\u00d0\u0001\u0000\u0000\u0000?\u00d6\u0001"+
		"\u0000\u0000\u0000A\u00e2\u0001\u0000\u0000\u0000C\u00e8\u0001\u0000\u0000"+
		"\u0000EJ\u0005\"\u0000\u0000FI\u0003\u0003\u0001\u0000GI\b\u0000\u0000"+
		"\u0000HF\u0001\u0000\u0000\u0000HG\u0001\u0000\u0000\u0000IL\u0001\u0000"+
		"\u0000\u0000JH\u0001\u0000\u0000\u0000JK\u0001\u0000\u0000\u0000KM\u0001"+
		"\u0000\u0000\u0000LJ\u0001\u0000\u0000\u0000MN\u0005\"\u0000\u0000N\u0002"+
		"\u0001\u0000\u0000\u0000OP\u0005\\\u0000\u0000PQ\u0007\u0001\u0000\u0000"+
		"Q\u0004\u0001\u0000\u0000\u0000RT\u0007\u0002\u0000\u0000SR\u0001\u0000"+
		"\u0000\u0000TU\u0001\u0000\u0000\u0000US\u0001\u0000\u0000\u0000UV\u0001"+
		"\u0000\u0000\u0000V]\u0001\u0000\u0000\u0000WY\u0005.\u0000\u0000XZ\u0007"+
		"\u0002\u0000\u0000YX\u0001\u0000\u0000\u0000Z[\u0001\u0000\u0000\u0000"+
		"[Y\u0001\u0000\u0000\u0000[\\\u0001\u0000\u0000\u0000\\^\u0001\u0000\u0000"+
		"\u0000]W\u0001\u0000\u0000\u0000]^\u0001\u0000\u0000\u0000^\u0006\u0001"+
		"\u0000\u0000\u0000_`\u0005d\u0000\u0000`a\u0005e\u0000\u0000ab\u0005f"+
		"\u0000\u0000bc\u0005u\u0000\u0000cd\u0005n\u0000\u0000d\b\u0001\u0000"+
		"\u0000\u0000ef\u0005i\u0000\u0000fg\u0005f\u0000\u0000g\n\u0001\u0000"+
		"\u0000\u0000hi\u0005c\u0000\u0000ij\u0005o\u0000\u0000jk\u0005n\u0000"+
		"\u0000kl\u0005d\u0000\u0000l\f\u0001\u0000\u0000\u0000mn\u0005l\u0000"+
		"\u0000no\u0005e\u0000\u0000op\u0005t\u0000\u0000p\u000e\u0001\u0000\u0000"+
		"\u0000qr\u0005q\u0000\u0000rs\u0005u\u0000\u0000st\u0005o\u0000\u0000"+
		"tu\u0005t\u0000\u0000uv\u0005e\u0000\u0000v\u0010\u0001\u0000\u0000\u0000"+
		"wx\u0005p\u0000\u0000xy\u0005r\u0000\u0000yz\u0005i\u0000\u0000z{\u0005"+
		"n\u0000\u0000{|\u0005t\u0000\u0000|\u0012\u0001\u0000\u0000\u0000}~\u0005"+
		"d\u0000\u0000~\u007f\u0005e\u0000\u0000\u007f\u0080\u0005f\u0000\u0000"+
		"\u0080\u0081\u0005p\u0000\u0000\u0081\u0082\u0005a\u0000\u0000\u0082\u0083"+
		"\u0005r\u0000\u0000\u0083\u0084\u0005a\u0000\u0000\u0084\u0085\u0005m"+
		"\u0000\u0000\u0085\u0086\u0005e\u0000\u0000\u0086\u0087\u0005t\u0000\u0000"+
		"\u0087\u0088\u0005e\u0000\u0000\u0088\u0089\u0005r\u0000\u0000\u0089\u0014"+
		"\u0001\u0000\u0000\u0000\u008a\u008b\u0005l\u0000\u0000\u008b\u008c\u0005"+
		"a\u0000\u0000\u008c\u008d\u0005m\u0000\u0000\u008d\u008e\u0005b\u0000"+
		"\u0000\u008e\u008f\u0005d\u0000\u0000\u008f\u0090\u0005a\u0000\u0000\u0090"+
		"\u0016\u0001\u0000\u0000\u0000\u0091\u0092\u0005f\u0000\u0000\u0092\u0093"+
		"\u0005o\u0000\u0000\u0093\u0094\u0005r\u0000\u0000\u0094\u0095\u0005m"+
		"\u0000\u0000\u0095\u0096\u0005a\u0000\u0000\u0096\u0097\u0005t\u0000\u0000"+
		"\u0097\u0018\u0001\u0000\u0000\u0000\u0098\u0099\u0005a\u0000\u0000\u0099"+
		"\u009a\u0005n\u0000\u0000\u009a\u009b\u0005d\u0000\u0000\u009b\u001a\u0001"+
		"\u0000\u0000\u0000\u009c\u009d\u0005o\u0000\u0000\u009d\u009e\u0005r\u0000"+
		"\u0000\u009e\u001c\u0001\u0000\u0000\u0000\u009f\u00a0\u0005n\u0000\u0000"+
		"\u00a0\u00a1\u0005o\u0000\u0000\u00a1\u00a2\u0005t\u0000\u0000\u00a2\u001e"+
		"\u0001\u0000\u0000\u0000\u00a3\u00a4\u0005e\u0000\u0000\u00a4\u00a5\u0005"+
		"l\u0000\u0000\u00a5\u00a6\u0005s\u0000\u0000\u00a6\u00a7\u0005e\u0000"+
		"\u0000\u00a7 \u0001\u0000\u0000\u0000\u00a8\u00ac\u0007\u0003\u0000\u0000"+
		"\u00a9\u00ab\u0007\u0004\u0000\u0000\u00aa\u00a9\u0001\u0000\u0000\u0000"+
		"\u00ab\u00ae\u0001\u0000\u0000\u0000\u00ac\u00aa\u0001\u0000\u0000\u0000"+
		"\u00ac\u00ad\u0001\u0000\u0000\u0000\u00ad\"\u0001\u0000\u0000\u0000\u00ae"+
		"\u00ac\u0001\u0000\u0000\u0000\u00af\u00b0\u0005+\u0000\u0000\u00b0$\u0001"+
		"\u0000\u0000\u0000\u00b1\u00b2\u0005-\u0000\u0000\u00b2&\u0001\u0000\u0000"+
		"\u0000\u00b3\u00b4\u0005*\u0000\u0000\u00b4\u00b5\u0001\u0000\u0000\u0000"+
		"\u00b5\u00b6\u0006\u0013\u0000\u0000\u00b6(\u0001\u0000\u0000\u0000\u00b7"+
		"\u00b8\u0005/\u0000\u0000\u00b8*\u0001\u0000\u0000\u0000\u00b9\u00ba\u0005"+
		"%\u0000\u0000\u00ba,\u0001\u0000\u0000\u0000\u00bb\u00bc\u0005>\u0000"+
		"\u0000\u00bc\u00bd\u0005=\u0000\u0000\u00bd.\u0001\u0000\u0000\u0000\u00be"+
		"\u00bf\u0005<\u0000\u0000\u00bf\u00c0\u0005=\u0000\u0000\u00c00\u0001"+
		"\u0000\u0000\u0000\u00c1\u00c2\u0005>\u0000\u0000\u00c22\u0001\u0000\u0000"+
		"\u0000\u00c3\u00c4\u0005<\u0000\u0000\u00c44\u0001\u0000\u0000\u0000\u00c5"+
		"\u00c6\u0005=\u0000\u0000\u00c66\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005"+
		"(\u0000\u0000\u00c88\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005)\u0000"+
		"\u0000\u00ca:\u0001\u0000\u0000\u0000\u00cb\u00cc\u0005t\u0000\u0000\u00cc"+
		"\u00cd\u0005r\u0000\u0000\u00cd\u00ce\u0005u\u0000\u0000\u00ce\u00cf\u0005"+
		"e\u0000\u0000\u00cf<\u0001\u0000\u0000\u0000\u00d0\u00d1\u0005f\u0000"+
		"\u0000\u00d1\u00d2\u0005a\u0000\u0000\u00d2\u00d3\u0005l\u0000\u0000\u00d3"+
		"\u00d4\u0005s\u0000\u0000\u00d4\u00d5\u0005e\u0000\u0000\u00d5>\u0001"+
		"\u0000\u0000\u0000\u00d6\u00da\u0005;\u0000\u0000\u00d7\u00d9\t\u0000"+
		"\u0000\u0000\u00d8\u00d7\u0001\u0000\u0000\u0000\u00d9\u00dc\u0001\u0000"+
		"\u0000\u0000\u00da\u00db\u0001\u0000\u0000\u0000\u00da\u00d8\u0001\u0000"+
		"\u0000\u0000\u00db\u00dd\u0001\u0000\u0000\u0000\u00dc\u00da\u0001\u0000"+
		"\u0000\u0000\u00dd\u00de\u0005\n\u0000\u0000\u00de\u00df\u0001\u0000\u0000"+
		"\u0000\u00df\u00e0\u0006\u001f\u0001\u0000\u00e0@\u0001\u0000\u0000\u0000"+
		"\u00e1\u00e3\u0007\u0005\u0000\u0000\u00e2\u00e1\u0001\u0000\u0000\u0000"+
		"\u00e3\u00e4\u0001\u0000\u0000\u0000\u00e4\u00e2\u0001\u0000\u0000\u0000"+
		"\u00e4\u00e5\u0001\u0000\u0000\u0000\u00e5\u00e6\u0001\u0000\u0000\u0000"+
		"\u00e6\u00e7\u0006 \u0001\u0000\u00e7B\u0001\u0000\u0000\u0000\u00e8\u00e9"+
		"\t\u0000\u0000\u0000\u00e9D\u0001\u0000\u0000\u0000\t\u0000HJU[]\u00ac"+
		"\u00da\u00e4\u0002\u0003\u0000\u0000\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}